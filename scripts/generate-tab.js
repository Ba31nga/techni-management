const fs = require("fs");
const path = require("path");

const [label, routePath, role] = process.argv.slice(2);

if (!label || !routePath || !role) {
  console.error('Usage: node scripts/generate-tab.js "Label" /path role');
  process.exit(1);
}

const cleanPath = routePath.replace(/^\//, "");
const pageDir = path.join(__dirname, "..", "src", "app", cleanPath);
const pageFile = path.join(pageDir, "page.tsx");
const tabsConfigPath = path.join(
  __dirname,
  "..",
  "src",
  "lib",
  "tabsConfig.ts"
);

if (!fs.existsSync(tabsConfigPath)) {
  console.error("tabsConfig.ts not found at src/lib/tabsConfig.ts");
  process.exit(1);
}

fs.mkdirSync(pageDir, { recursive: true });

const pageContent = `// auto-generated by generate-tab.js
import RoleGuard from "@/components/RoleGuard";

export default function ${
  cleanPath.charAt(0).toUpperCase() + cleanPath.slice(1)
}Page() {
  return (
    <RoleGuard>
      <div>ברוך הבא לדף ${label}!</div>
    </RoleGuard>
  );
}
`;

fs.writeFileSync(pageFile, pageContent, "utf8");
console.log(`Created page: src/app/${cleanPath}/page.tsx`);

let tabsConfigContent = fs.readFileSync(tabsConfigPath, "utf8");

// Step 1: Ensure role is in Role union type
const roleTypeRegex =
  /export\s+type\s+Role\s*=\s*((?:\s*"[^"]+"\s*\|\s*)*"[^"]+")\s*;/;
const roleMatch = tabsConfigContent.match(roleTypeRegex);

if (!roleMatch) {
  console.error("Could not find Role union type in tabsConfig.ts");
  process.exit(1);
}

let roleUnion = roleMatch[1];
if (!roleUnion.includes(`"${role}"`)) {
  roleUnion += ` | "${role}"`;
  tabsConfigContent = tabsConfigContent.replace(
    roleTypeRegex,
    `export type Role = ${roleUnion};`
  );
  console.log(`Added role "${role}" to Role union type`);
}

// Step 2: Add tab to TABS
const tabEntry = `  {
    label: '${label}',
    path: '/${cleanPath}',
    roles: ['${role}'],
  },\n`;

tabsConfigContent = tabsConfigContent.replace(
  /(export\s+const\s+TABS\s*:\s*Tab\[\]\s*=\s*\[)/,
  `$1\n${tabEntry}`
);

fs.writeFileSync(tabsConfigPath, tabsConfigContent, "utf8");
console.log("Updated tabsConfig.ts with new tab");
